<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="17" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-23T22:16:59 IST" name="All Test Suite" finished-at="2025-10-23T22:17:11 IST" duration-ms="11310">
    <groups>
      <group name="edge">
        <method signature="LoginTest.verifyEmptyCredentialsLogin()[pri:4, instance:com.testLib.LoginTest@4bc28c33]" name="verifyEmptyCredentialsLogin" class="com.testLib.LoginTest"/>
      </group> <!-- edge -->
      <group name="negative">
        <method signature="LoginTest.verifyInvalidLogin()[pri:2, instance:com.testLib.LoginTest@4bc28c33]" name="verifyInvalidLogin" class="com.testLib.LoginTest"/>
      </group> <!-- negative -->
      <group name="ui">
        <method signature="LoginTest.verifyLoginPageUIElements()[pri:1, instance:com.testLib.LoginTest@4bc28c33]" name="verifyLoginPageUIElements" class="com.testLib.LoginTest"/>
      </group> <!-- ui -->
      <group name="regression">
        <method signature="LoginTest.verifyInvalidLogin()[pri:2, instance:com.testLib.LoginTest@4bc28c33]" name="verifyInvalidLogin" class="com.testLib.LoginTest"/>
        <method signature="LoginTest.verifyEmptyCredentialsLogin()[pri:4, instance:com.testLib.LoginTest@4bc28c33]" name="verifyEmptyCredentialsLogin" class="com.testLib.LoginTest"/>
      </group> <!-- regression -->
      <group name="sanity">
        <method signature="LoginTest.verifyLoginPageUIElements()[pri:1, instance:com.testLib.LoginTest@4bc28c33]" name="verifyLoginPageUIElements" class="com.testLib.LoginTest"/>
        <method signature="LoginTest.verifyValidLogin()[pri:3, instance:com.testLib.LoginTest@4bc28c33]" name="verifyValidLogin" class="com.testLib.LoginTest"/>
      </group> <!-- sanity -->
      <group name="positive">
        <method signature="LoginTest.verifyValidLogin()[pri:3, instance:com.testLib.LoginTest@4bc28c33]" name="verifyValidLogin" class="com.testLib.LoginTest"/>
      </group> <!-- positive -->
      <group name="login">
        <method signature="LoginTest.verifyLoginPageUIElements()[pri:1, instance:com.testLib.LoginTest@4bc28c33]" name="verifyLoginPageUIElements" class="com.testLib.LoginTest"/>
        <method signature="LoginTest.verifyInvalidLogin()[pri:2, instance:com.testLib.LoginTest@4bc28c33]" name="verifyInvalidLogin" class="com.testLib.LoginTest"/>
        <method signature="LoginTest.verifyValidLogin()[pri:3, instance:com.testLib.LoginTest@4bc28c33]" name="verifyValidLogin" class="com.testLib.LoginTest"/>
        <method signature="LoginTest.verifyEmptyCredentialsLogin()[pri:4, instance:com.testLib.LoginTest@4bc28c33]" name="verifyEmptyCredentialsLogin" class="com.testLib.LoginTest"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2025-10-23T22:16:59 IST" name="EmployeeProcessorTest" finished-at="2025-10-23T22:17:11 IST" duration-ms="11310">
      <class name="com.testLib.LoginTest">
        <test-method is-config="true" signature="beforeSuiteSetup(org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:16:59 IST" name="beforeSuiteSetup" finished-at="2025-10-23T22:16:59 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteSetup -->
        <test-method is-config="true" signature="beforeTestSetup(org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:16:59 IST" name="beforeTestSetup" finished-at="2025-10-23T22:16:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestSetup -->
        <test-method is-config="true" signature="loadConfig()[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:16:59 IST" name="loadConfig" finished-at="2025-10-23T22:16:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadConfig -->
        <test-method is-config="true" signature="baseSetup(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:16:59 IST" name="baseSetup" finished-at="2025-10-23T22:17:02 IST" duration-ms="2350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyLoginPageUIElements()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetup -->
        <test-method signature="verifyLoginPageUIElements()[pri:1, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:02 IST" name="verifyLoginPageUIElements" finished-at="2025-10-23T22:17:04 IST" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageUIElements -->
        <test-method is-config="true" signature="baseTeardown(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:04 IST" name="baseTeardown" finished-at="2025-10-23T22:17:04 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageUIElements status=SUCCESS method=LoginTest.verifyLoginPageUIElements()[pri:1, instance:com.testLib.LoginTest@4bc28c33] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyLoginPageUIElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTeardown -->
        <test-method is-config="true" signature="baseSetup(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:04 IST" name="baseSetup" finished-at="2025-10-23T22:17:05 IST" duration-ms="1111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyInvalidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetup -->
        <test-method signature="verifyInvalidLogin()[pri:2, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:05 IST" name="verifyInvalidLogin" finished-at="2025-10-23T22:17:05 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method is-config="true" signature="baseTeardown(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:05 IST" name="baseTeardown" finished-at="2025-10-23T22:17:05 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidLogin status=SUCCESS method=LoginTest.verifyInvalidLogin()[pri:2, instance:com.testLib.LoginTest@4bc28c33] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyInvalidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTeardown -->
        <test-method is-config="true" signature="baseSetup(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:05 IST" name="baseSetup" finished-at="2025-10-23T22:17:06 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyValidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetup -->
        <test-method signature="verifyValidLogin()[pri:3, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:06 IST" name="verifyValidLogin" finished-at="2025-10-23T22:17:09 IST" duration-ms="2282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidLogin -->
        <test-method is-config="true" signature="baseTeardown(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:09 IST" name="baseTeardown" finished-at="2025-10-23T22:17:09 IST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidLogin status=SUCCESS method=LoginTest.verifyValidLogin()[pri:3, instance:com.testLib.LoginTest@4bc28c33] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTeardown -->
        <test-method is-config="true" signature="baseSetup(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:09 IST" name="baseSetup" finished-at="2025-10-23T22:17:10 IST" duration-ms="1216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyEmptyCredentialsLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615b5480]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetup -->
        <test-method signature="verifyEmptyCredentialsLogin()[pri:4, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:10 IST" name="verifyEmptyCredentialsLogin" finished-at="2025-10-23T22:17:10 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmptyCredentialsLogin -->
        <test-method is-config="true" signature="baseTeardown(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:10 IST" name="baseTeardown" finished-at="2025-10-23T22:17:10 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmptyCredentialsLogin status=SUCCESS method=LoginTest.verifyEmptyCredentialsLogin()[pri:4, instance:com.testLib.LoginTest@4bc28c33] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.testLib.LoginTest.verifyEmptyCredentialsLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTeardown -->
        <test-method is-config="true" signature="afterSuiteTeardown()[pri:0, instance:com.testLib.LoginTest@4bc28c33]" started-at="2025-10-23T22:17:11 IST" name="afterSuiteTeardown" finished-at="2025-10-23T22:17:11 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteTeardown -->
      </class> <!-- com.testLib.LoginTest -->
      <class name="Java8.EmployeeProcessorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="setUp" finished-at="2025-10-23T22:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmployeeCreation()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeCreation" finished-at="2025-10-23T22:17:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeCreation -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testEmployeeDataWithDataProvider(int,java.lang.String,double,java.lang.String)[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeDataWithDataProvider" data-provider="employeeData" finished-at="2025-10-23T22:17:10 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aarav Sharma]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[85000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Development]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeDataWithDataProvider -->
        <test-method signature="testEmployeeDataWithDataProvider(int,java.lang.String,double,java.lang.String)[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeDataWithDataProvider" data-provider="employeeData" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Priya Patel]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[92000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Development]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeDataWithDataProvider -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testEmployeeDataWithDataProvider(int,java.lang.String,double,java.lang.String)[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeDataWithDataProvider" data-provider="employeeData" finished-at="2025-10-23T22:17:10 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rahul Kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[68000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeDataWithDataProvider -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testEmployeeDataWithDataProvider(int,java.lang.String,double,java.lang.String)[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeDataWithDataProvider" data-provider="employeeData" finished-at="2025-10-23T22:17:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Anjali Singh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[78000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Development]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeDataWithDataProvider -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testEmployeeSkills()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testEmployeeSkills" finished-at="2025-10-23T22:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmployeeSkills -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testFlatMapForSkills()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testFlatMapForSkills" finished-at="2025-10-23T22:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlatMapForSkills -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testLambdaExpressionsWithForEach()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testLambdaExpressionsWithForEach" finished-at="2025-10-23T22:17:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLambdaExpressionsWithForEach -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMethodReferences()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testMethodReferences" finished-at="2025-10-23T22:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodReferences -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSortingWithLambdaComparator()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testSortingWithLambdaComparator" finished-at="2025-10-23T22:17:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortingWithLambdaComparator -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testStreamFiltering()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testStreamFiltering" finished-at="2025-10-23T22:17:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStreamFiltering -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testStreamMappingAndCollection()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testStreamMappingAndCollection" finished-at="2025-10-23T22:17:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStreamMappingAndCollection -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="afterMethod" finished-at="2025-10-23T22:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testStreamReductionAndStatistics()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:10 IST" name="testStreamReductionAndStatistics" finished-at="2025-10-23T22:17:11 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStreamReductionAndStatistics -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:11 IST" name="afterMethod" finished-at="2025-10-23T22:17:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Java8.EmployeeProcessorTest@b6b1987]" started-at="2025-10-23T22:17:11 IST" name="tearDown" finished-at="2025-10-23T22:17:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Java8.EmployeeProcessorTest -->
    </test> <!-- EmployeeProcessorTest -->
  </suite> <!-- All Test Suite -->
</testng-results>
